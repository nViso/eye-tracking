videoFileName = '/Users/ZhipingJiang/trackingdata/video_parsing/141115_0112vision.mov';
metaFileName  = '/Users/ZhipingJiang/trackingdata/video_parsing/141115_0112vision.test';
metaInfo = parsePupilTrackerData(metaFileName);
videoPlayer = vision.VideoPlayer;
newCircleDraw = vision.MarkerInserter('Shape','Plus','Size',20,'BorderColor','Custom','CustomBorderColor',[0 255 0]);
oldCircleDraw = vision.MarkerInserter('Shape','Plus','Size',20,'BorderColor','Custom','CustomBorderColor',[0 0 255]);
featurePointsDraw = vision.MarkerInserter('Shape','Circle','Size',5,'BorderColor','Custom','CustomBorderColor',[255 255 255]);
videoReader = VideoReader(videoFileName);
read(videoReader,inf);
frameNumber = videoReader.NumberOfFrames;
for i = 1:frameNumber
    i
    videoFrame = read(videoReader,i);
    li = metaInfo.leftInnerCanthus(i,:);
    ri = metaInfo.rightInnerCanthus(i,:);
    lo = metaInfo.leftOuterCanthus(i,:);
    ro = metaInfo.rightOuterCanthus(i,:);
    lc = round((li + lo) /2);
    rc = round((ri + ro) /2);
    lhd = round(abs(lo(1) - li(1))/2);
    rhd = round(abs(ro(1) - ri(1))/2);
    ltl = [lc(1) - lhd lc(2) - lhd];
    lbr = [lc(1) + lhd lc(2) + lhd];
    rtl = [rc(1) - rhd rc(2) - rhd];
    rbr = [rc(1) + rhd rc(2) + rhd];
    leftEye = videoFrame(ltl(2):lbr(2),ltl(1):lbr(1),:);
    rightEye = videoFrame(rtl(2):rbr(2),rtl(1):rbr(1),:);
    [ler, lec] = LocatePupilCenter(leftEye,7);
    [rer, rec] = LocatePupilCenter(rightEye,7);
    newLeft = ltl + [ lec ler];
    newRight = rtl + [ rec rer];
    oldLeft = metaInfo.leftPupilCenter(i,:);
    oldRight= metaInfo.rightPupilCenter(i,:);
    featurePoints = int32(reshape(metaInfo.allFeaturePoints(i,:),[2 7])');
    newCirles = int32(round([newLeft ; newRight]));
    metaInfo.newLeftCenterInFace(i,:) = EstimatePupilCenterFaceCoordinates(newLeft,metaInfo.cameraMatrix,metaInfo.rvec(:,:,i),metaInfo.tvec(i,:)');
    metaInfo.newRightCenterInFace(i,:) = EstimatePupilCenterFaceCoordinates(newRight,metaInfo.cameraMatrix,metaInfo.rvec(:,:,i),metaInfo.tvec(i,:)');
    oldCirles = int32([oldLeft ; oldRight]);
    videoFrame= step(newCircleDraw,videoFrame,newCirles);
    videoFrame = step(oldCircleDraw,videoFrame,oldCirles);
    videoFrame = step(featurePointsDraw,videoFrame,featurePoints);
    step(videoPlayer,videoFrame);
end
release(videoPlayer);